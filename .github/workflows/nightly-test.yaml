name: Nightly Test  

on:
  schedule:
    - cron: '0 1 * * *'
  

jobs:
  test:
    name: Run Unit Tests
    runs-on: ${{ vars.RUNNER_RUNS_ON }}

    steps:
    - uses: actions/checkout@v4
      id: checkout
      with:
        fetch-depth: 0

    - name: Set up Go
      id: setup-go
      if: ${{ steps.checkout.outcome == 'success' }}
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true
        cache-dependency-path: |
          **/go.mod
          **/go.sum

    - name: Install dependencies
      id: install-deps
      if: ${{ steps.setup-go.outcome == 'success' }}
      run: go mod download

    - name: Run Unit Tests
      id: run-tests
      if: ${{ steps.install-deps.outcome == 'success' }}
      run: |
        go test -v -race -coverprofile=coverage.out ./...
    
    - name: Run Examples
      id: run-examples
      if: ${{ steps.run-tests.outcome == 'success' }}
      env:
        MGC_API_TOKEN: ${{ secrets.MGC_API_TOKEN }}
      run: |
        go run cmd/examples/main.go